name: CI
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Cache Python
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-3.7-pip-${{ hashFiles('setup.cfg') }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install .
          pip install ".[lint]"
      - name: Lint
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  smoke:
    name: Smoke test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Cache Python
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-3.7-pip-${{ hashFiles('setup.cfg') }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install .
          pip install ".[test]"
      - name: Run smoke tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYVERSE_USERNAME: ${{ secrets.CYVERSE_USERNAME }}
          CYVERSE_PASSWORD: ${{ secrets.CYVERSE_PASSWORD }}
        run: |
          pytest -v -n auto -S
  test:
    name: Test
    needs: smoke
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [3.7, 3.8, 3.9]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Cache Python
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ matrix.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('setup.cfg') }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install .
          pip install ".[test]"
      - name: Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYVERSE_USERNAME: ${{ secrets.CYVERSE_USERNAME }}
          CYVERSE_PASSWORD: ${{ secrets.CYVERSE_PASSWORD }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
        run: |
          coverage run --source=plantit -m pytest -s -v -n auto --keep-failed=.failed
          coveralls
      - name: Upload failed test outputs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: failed-${{ matrix.os }}-${{ matrix.python-version }}
          path: |
            ./.failed/**
  publish:
    name: Publish to Python Package Index
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Cache Python
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-3.7-pip-${{ hashFiles('setup.cfg') }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install flake8 pytest coveralls setuptools wheel twine
          pip install .
          pip install ".[test]"
      - name: Update Coveralls
        run: |
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish package
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          old_version=$(pip install plantit==random 2>&1 >/dev/null | sed 's|.*, \([^ ]*\)).*|\1|g' | head -n 1 | xargs)
          new_version=$(pip show plantit | sed 's|.*Version: \([^ ]*\).*|\1|g' | sed -n 2p)
          echo "$old_version"
          echo "$new_version"
          if ! [[ "$new_version" = "$old_version" ]]; then
            python setup.py sdist bdist_wheel
            python -m twine upload dist/*
          fi
      - name: Slack success notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: plantit-dev
          SLACK_ICON: https://raw.githubusercontent.com/Computational-Plant-Science/plantit/master/plantit/front_end/src/assets/logo-favicon.png
          SLACK_MESSAGE: 'Build succeeded'
          SLACK_TITLE: plantit CI
          SLACK_USERNAME: plantit